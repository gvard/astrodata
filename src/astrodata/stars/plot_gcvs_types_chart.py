"""Script for plotting a bar chart with types of variable stars in GCVS.
Data source: https://cdsarc.cds.unistra.fr/ftp/B/gcvs/vartype.txt
"""

# Подключаем модули стандартной библиотеки (входит в состав Python) для работы
# с датами и языковыми стандартами
from datetime import datetime
import locale

# Подключаем внешние библиотеки для создания иллюстраций и работы с данными.
# Для их установки запустить консоль (например, PowerShell) и выполнить команду
# pip install matplotlib pandas
import matplotlib.pyplot as plt
import pandas as pd

# Устанавливаем переменную с минимальным количеством переменных звезд,
# чтобы отделить типы, которые будут добавлены в выборку. Остальные будут отброшены.
LIM_NUM = 125
# Читаем файл из Общего каталога переменных звезд ОКПЗ, содержащий перепись типов
# переменных звезд. Указываем диапазон номеров строк с данными.
data = open("vartype.txt").readlines()[960:1491]
# Создаем 2 пустых списка
types, numbers = [], []
# Создаем 1 пустой словарь
types_dct = {}

# В цикле делим каждую строку по символу вертикальной черты '|',
# берем 3-е значение из результата деления выше и конвертируем взятые символы в целое число.
# берем 2-е значение из результата деления выше и обрезаем пробелы слева и справа.
# Добавляем их в списки и словарь.
for line in data:
    val = line.split('|')
    num = int(val[2])
    typ = val[1].strip('')
    numbers.append(int(val[2]))
    # Если двоеточия нет в названии типа и тип еще не в словаре и количество звезд больше предела,
    if ":" not in typ and typ.strip() not in types_dct and num > LIM_NUM:
        # тогда добавь значения в список и в словарь.
        types.append(typ)
        types_dct[typ.strip()] = num
    # Иначе если двоеточие в названии типа и тип без двоеточия уже есть в словаре,
    elif ":" in typ and typ.strip().strip(':') in types_dct:
        # прибавь количество переменных типа с двоеточием к количеству переменных
        # того же типа без двоеточия в словарь.
        types_dct[typ.strip().strip(':')] += num

# Использовать русскоязычную локаль: теперь названия месяцев будут по-русски
locale.setlocale(locale.LC_ALL, 'ru_RU')
# Взять текущую дату
today = datetime.now()
# Взять текущие месяц и год
MONTH, YEAR = today.strftime("%B"), today.year

# Сортировка массива данных в виде словаря по значениям.
# То есть, в словаре сначала будут идти типы с наименьшим количеством переменных
types_dct = dict(sorted(types_dct.items(), key=lambda x:x[1]))

# Создаем массив данных, состоящий из списка количества звезд определенных типов
data = {'Количество переменных звезд в ОКПЗ': types_dct.values()}
df = pd.DataFrame(data, index=types_dct.keys())
# Печатаем список названий всех типов, вошедших в выборку, их количество
# и полное количество типов в статистике
print('Типы выборки:', list(types_dct.keys()), 'их количество:', len(types_dct.keys()),
    'всего типов в статистике:', len(numbers))
# Строим столбчатую диаграмму размером 18 на 9, с шириной столбцов 88%,
# подписи развернуты на 45 градусов
ax = df.plot(kind='bar', figsize=(18, 9), width=0.88, rot=45)

# Подрезаем пустые поля со всех сторон, поджимая края рисунка к подписям осей
plt.subplots_adjust(left=0.04, bottom=0.09, right=0.985, top=0.955)
# Делаем подписи осей, размер шрифта 14 пунктов, снова подрезаем пустое пространство
plt.xlabel('Типы переменных звезд', fontsize=14, labelpad=0)
plt.ylabel('Количество переменных звезд', fontsize=14, labelpad=0)
# Делаем подпись рисунка с указанием месяца и года данных статистики, размер шрифта 16 пунктов
plt.title(f'Распределение по типам переменных звезд. {MONTH} {YEAR} года', fontsize=16)
# Рисуем легенду графика в верхнем левом углу
plt.legend(fontsize=14, loc='upper left')
# У каждого столбца (bar) сверху пишем числовое значение
ax.bar_label(ax.containers[-1])

# Эта команда выводит интерактивный график, его можно изменять при помощи инструментов лупа и сдвиг
# plt.show()

# Сохраняем рисунок в векторном формате svg, его можно открыть в браузере Chrome или Firefox
# Можно сохранить в формате png с указанием разрешения в точках на дюйм, dpi
plt.savefig('gcvs_types_distribution-combined-sorted.svg', dpi=120)
